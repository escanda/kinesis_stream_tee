name: GraalVM build
on:
  workflow_dispatch:
      inputs:
        candidate:
          description: 'The name of the candidate to install'
          required: false
        version:
          description: 'The version of the candidate to install'
          required: false
jobs:
  build:
    name: 'graalvm compile for macos, windows and ubuntu'
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
          - os: 'macos-latest'
            platform: 'darwin-arm64'
          - os: 'windows-latest'
            platform: 'win-amd64'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run script file
        run: |
          if [[ $RUNNER_OS == 'Linux' || $RUNNER_OS == 'macOS' ]]; then
            export SDKMAN_DIR="$HOME/.sdkman" && curl -s "https://get.sdkman.io?rcupdate=false" | bash
            if [[ -z "${{ inputs.candidate }}" && -z "${{ inputs.version }}" ]]; then
                source $HOME/.sdkman/bin/sdkman-init.sh && sdk env install
              else
                candidate=${{ inputs.candidate }}
                version=${{ inputs.version }}
                source $HOME/.sdkman/bin/sdkman-init.sh && sdk install $candidate $version
            fi
            for child_dir in $(find "$SDKMAN_DIR/candidates" -mindepth 1 -maxdepth 1 -type d); do
              echo "$child_dir/current/bin" >> $GITHUB_PATH
            done
            echo "file=" >> $GITHUB_OUTPUT
          else
            candidate=${{ inputs.candidate }}
            version=${{ inputs.version }}
            platform=$(uname)
            base_name="${candidate}-${version}"
            
            zip_output="$base_name.zip"
            curl -L -o $zip_output https://api.sdkman.io/2/broker/download/$candidate/$version/$platform
            
            echo "file=$zip_output" >> $GITHUB_OUTPUT
          fi
        shell:
          bash
      - uses: sdkman/sdkman-action@v1-preview
        id: sdkman
        with:
          candidate: quarkus
          version: "3.8.6"
      - name: Print Java Environment
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          native-image --version
          quarkus --version
      - name: Package with native flag
        run: quarkus build --native -Dquarkus.native.native-image-xmx=4G
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./target/kinesis_stream_tee-1.0.0-SNAPSHOT-native-image-source-jar/kinesis_stream_tee-1.0.0-SNAPSHOT-runner*
          asset_name: kinesis_stream_tee-${{ matrix.os }}
          tag: ${{ github.ref }}
          overwrite: true